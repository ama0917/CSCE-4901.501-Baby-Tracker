Binary file [35m.venv_test/lib/python3.12/site-packages/cryptography/hazmat/primitives/twofactor/__pycache__/totp.cpython-312.pyc[m matches
[35m.venv_test/lib/python3.12/site-packages/cryptography/hazmat/primitives/twofactor/totp.py[m[36m:[m[32m19[m[36m:[mclass [1;31mTOTP[m:
[35m.venv_test/lib/python3.12/site-packages/cryptography/hazmat/primitives/twofactor/totp.py[m[36m:[m[32m45[m[36m:[m            raise InvalidToken("Supplied [1;31mTOTP[m value does not match.")
Binary file [35m.venv_test/lib/python3.12/site-packages/grpc/_cython/cygrpc.cpython-312-darwin.so[m matches
[35mauth/mfa.js[m[36m:[m[32m5[m[36m:[m  [1;31mmultiFactor[m,
[35mauth/mfa.js[m[36m:[m[32m7[m[36m:[m  [1;31mTotpMultiFactor[mGenerator,
[35mauth/mfa.js[m[36m:[m[32m13[m[36m:[m/** Start [1;31menroll[mment: returns otpauth:// URI for QR/Authenticator */
[35mauth/mfa.js[m[36m:[m[32m14[m[36m:[mexport async function [1;31mstartTotpEnrollment[m(user, { accountName, issuer, displayName } = {}) {
[35mauth/mfa.js[m[36m:[m[32m15[m[36m:[m  if (!user) throw new Error('No user for [1;31mTOTP[m [1;31menroll[mment');
[35mauth/mfa.js[m[36m:[m[32m16[m[36m:[m  console.log('[MFA] [1;31mstartTotpEnrollment[m for uid=', user.uid);
[35mauth/mfa.js[m[36m:[m[32m19[m[36m:[m  const session = await [1;31mmultiFactor[m(user).[1;31mgetSession[m();
[35mauth/mfa.js[m[36m:[m[32m22[m[36m:[m  const secret = await [1;31mTotpMultiFactor[mGenerator.generateSecret(session);
[35mauth/mfa.js[m[36m:[m[32m33[m[36m:[m  return { otpauthUrl, [1;31menroll[mmentDisplayName: name };
[35mauth/mfa.js[m[36m:[m[32m36[m[36m:[m/** Finish [1;31menroll[mment with the 6-digit code */
[35mauth/mfa.js[m[36m:[m[32m37[m[36m:[mexport async function [1;31mfinishTotpEnrollment[m(user, code) {
[35mauth/mfa.js[m[36m:[m[32m38[m[36m:[m  if (!user) throw new Error('No user for [1;31mTOTP[m [1;31menroll[mment finish');
[35mauth/mfa.js[m[36m:[m[32m40[m[36m:[m  if (!pending) throw new Error('No pending [1;31mTOTP[m [1;31menroll[mment session');
[35mauth/mfa.js[m[36m:[m[32m43[m[36m:[m  console.log('[MFA] [1;31mfinishTotpEnrollment[m for uid=', user.uid, 'displayName=', displayName);
[35mauth/mfa.js[m[36m:[m[32m46[m[36m:[m  const assertion = [1;31mTotpMultiFactor[mGenerator.assertionForEnrollment(secret, code);
[35mauth/mfa.js[m[36m:[m[32m47[m[36m:[m  console.log('[MFA] created assertion, [1;31menroll[mingâ€¦');
[35mauth/mfa.js[m[36m:[m[32m50[m[36m:[m  await [1;31mmultiFactor[m(user).[1;31menroll[m(assertion, displayName);
[35mauth/mfa.js[m[36m:[m[32m51[m[36m:[m  console.log('[MFA] [1;31menroll[m() resolved');
[35mauth/mfa.js[m[36m:[m[32m60[m[36m:[m  const count = (user.[1;31mmultiFactor[m?.[1;31menroll[medFactors || []).length;
[35mauth/mfa.js[m[36m:[m[32m61[m[36m:[m  console.log('[MFA] [1;31menroll[medFactors after [1;31menroll[m =', count);
[35mauth/mfa.js[m[36m:[m[32m78[m[36m:[m/** Resolve [1;31mTOTP[m sign-in by supplying the 6-digit code */
[35mauth/mfa.js[m[36m:[m[32m84[m[36m:[m  const totpHint = resolver.hints.find(h => h.factorId === [1;31mTotpMultiFactor[mGenerator.FACTOR_ID);
[35mauth/mfa.js[m[36m:[m[32m85[m[36m:[m  if (!totpHint) throw new Error('No [1;31mTOTP[m factor on this account');
[35mauth/mfa.js[m[36m:[m[32m87[m[36m:[m  const assertion = [1;31mTotpMultiFactor[mGenerator.assertionForSignIn(totpHint, code);
[35mfunctions/index.js[m[36m:[m[32m16[m[36m:[m// TEMP: one-time endpoint to enable [1;31mTOTP[m at the project level
[35mfunctions/index.js[m[36m:[m[32m20[m[36m:[m      [1;31mmultiFactor[mConfig: {
[35mfunctions/index.js[m[36m:[m[32m32[m[36m:[m    res.status(200).send('[1;31mTOTP[m MFA enabled');
[35mpackage-lock.json[m[36m:[m[32m6287[m[36m:[m      "integrity": "sha512-DX8nKgqcGwsc0eJSqYt5lwP4DH5FlHnmuWWBRy7X0NcaGR0ZtuyeESgMwTYVEtxmsNGY+qit4QYT/MIY[1;31mTOTP[meA==",
[35mscreens/LoginScreen.js[m[36m:[m[32m79[m[36m:[m    const f = (getAuth().currentUser?.[1;31mmultiFactor[m?.[1;31menroll[medFactors || []).length;
[35mscreens/LoginScreen.js[m[36m:[m[32m83[m[36m:[m    console.log('[MFA] factors after token refresh =', (getAuth().currentUser?.[1;31mmultiFactor[m?.[1;31menroll[medFactors || []).length);
[35mscreens/SettingsScreen.js[m[36m:[m[32m16[m[36m:[mimport { [1;31mstartTotpEnrollment[m, [1;31mfinishTotpEnrollment[m } from '../auth/mfa';
[35mscreens/SettingsScreen.js[m[36m:[m[32m42[m[36m:[m  // --- MFA ([1;31mTOTP[m) [1;31menroll[mment local state ---
[35mscreens/SettingsScreen.js[m[36m:[m[32m50[m[36m:[m  // Start [1;31mTOTP[m [1;31menroll[mment: gets a QR code URL (requires verified email)
[35mscreens/SettingsScreen.js[m[36m:[m[32m85[m[36m:[m    // Start [1;31menroll[mment -> returns otpauth:// URL
[35mscreens/SettingsScreen.js[m[36m:[m[32m86[m[36m:[m    const { otpauthUrl } = await [1;31mstartTotpEnrollment[m(user, {
[35mscreens/SettingsScreen.js[m[36m:[m[32m122[m[36m:[m// Finish [1;31mTOTP[m [1;31menroll[mment by verifying the 6-digit code
[35mscreens/SettingsScreen.js[m[36m:[m[32m138[m[36m:[m    await [1;31mfinishTotpEnrollment[m(user, totpCode.trim());
[35mscreens/SettingsScreen.js[m[36m:[m[32m141[m[36m:[m    console.log('[MFA] after [1;31mfinishTotpEnrollment[m, currentUser.uid =', getAuth().currentUser?.uid);
[35mscreens/SettingsScreen.js[m[36m:[m[32m145[m[36m:[m    const [1;31menroll[medCount = (user.[1;31mmultiFactor[m?.[1;31menroll[medFactors || []).length; // <-- ADDED
[35mscreens/SettingsScreen.js[m[36m:[m[32m146[m[36m:[m    console.log('[MFA] [1;31menroll[med factors after [1;31menroll[m =', [1;31menroll[medCount);     // <-- ADDED
[35mscreens/SettingsScreen.js[m[36m:[m[32m158[m[36m:[m    if ([1;31menroll[medCount === 0) { // <-- ADDED
[35mscreens/SettingsScreen.js[m[36m:[m[32m172[m[36m:[m    console.warn('[1;31mfinishTotpEnrollment[m error:', err); // <-- ADDED
[35mscreens/SettingsScreen.js[m[36m:[m[32m349[m[36m:[m                // Keep only a simple flag; deeper MFA/[1;31mTOTP[m wiring intentionally commented out.
[35mscreens/SettingsScreen.js[m[36m:[m[32m358[m[36m:[m        {/* --- MFA ([1;31mTOTP[m) Enrollment Section --- */}
[35mscreens/SettingsScreen.js[m[36m:[m[32m380[m[36m:[m                <Text style={{ color: 'white', fontWeight: '700' }}>Set up Authenticator ([1;31mTOTP[m)</Text>
[35mscreens/SignUpScreen.js[m[36m:[m[32m24[m[36m:[m/* ------------------- YOUR MFA/[1;31mTOTP[m BITS (commented out) ------------------- */
[35mscreens/SignUpScreen.js[m[36m:[m[32m26[m[36m:[m// import { [1;31mstartTotpEnrollment[m, [1;31mfinishTotpEnrollment[m } from '../auth/mfa';
[35mscreens/SignUpScreen.js[m[36m:[m[32m37[m[36m:[m  // [REMOVED from UI for now] isFocused, MFA [1;31menroll[mment UI/state, icons, etc.
[35mscreens/SignUpScreen.js[m[36m:[m[32m48[m[36m:[m      // [KEPT minimal profile doc; MFA disabled since weâ€™re commenting out [1;31mTOTP[m]
[35mscreens/SignUpScreen.js[m[36m:[m[32m52[m[36m:[m        MFAEnabled: false,     // [CHANGED] false for now; [1;31mTOTP[m is commented out
[35mscreens/SignUpScreen.js[m[36m:[m[32m139[m[36m:[m                {/* ---------------- COMMENTED OUT: [1;31mTOTP[m UI block ----------------
[35mscreens/SignUpScreen.js[m[36m:[m[32m140[m[36m:[m                {[1;31menroll[mingMfa && (
[35mscreens/SignUpScreen.js[m[36m:[m[32m143[m[36m:[m                      Set up Authenticator ([1;31mTOTP[m)
[35mscreens/SignUpScreen.js[m[36m:[m[32m173[m[36m:[m                        await [1;31mfinishTotpEnrollment[m(auth.currentUser, mfaCode);
